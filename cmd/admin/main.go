// Code generated by hertz generator.

package main

import (
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/quarkcms/quark-go/pkg/adapter/hertzadapter"
	"github.com/quarkcms/quark-go/pkg/app/handler/admin"
	"github.com/quarkcms/quark-go/pkg/app/install"
	"github.com/quarkcms/quark-go/pkg/app/middleware"
	"github.com/quarkcms/quark-go/pkg/builder"
	"github.com/quarkcms/quark-micro/cmd/admin/biz/handler"
	appinstall "github.com/quarkcms/quark-micro/cmd/admin/biz/install"
	"github.com/quarkcms/quark-micro/config"
	"gorm.io/driver/mysql"
	"gorm.io/gorm"
)

func main() {
	h := server.Default(server.WithHostPorts(config.App.Host))

	// 注册路由
	register(h)

	// 加载html模板
	h.LoadHTMLGlob("../../web/template/*")

	// 静态文件
	h.StaticFile("/admin/", "../../website/admin/index.html")

	// 静态文件目录
	fs := &app.FS{Root: "../../website", IndexNames: []string{"index.html"}}
	h.StaticFS("/", fs)

	// 配置信息
	var (
		appKey     = config.App.Key
		dbUser     = config.Mysql.Username
		dbPassword = config.Mysql.Password
		dbHost     = config.Mysql.Host
		dbPort     = config.Mysql.Port
		dbName     = config.Mysql.Database
		dbCharset  = config.Mysql.Charset
	)

	// 数据库配置信息
	dsn := dbUser + ":" + dbPassword + "@tcp(" + dbHost + ":" + dbPort + ")/" + dbName + "?charset=" + dbCharset + "&parseTime=True&loc=Local"

	// 配置资源
	getConfig := &builder.Config{
		AppKey: appKey,
		DBConfig: &builder.DBConfig{
			Dialector: mysql.Open(dsn),
			Opts:      &gorm.Config{},
		},
		Providers: append(admin.Providers, handler.Provider...),
		AdminLayout: &builder.AdminLayout{
			Title:        config.Admin.Title,
			Logo:         config.Admin.Logo,
			Layout:       config.Admin.Layout,
			SplitMenus:   config.Admin.SplitMenus,
			ContentWidth: config.Admin.ContentWidth,
			PrimaryColor: config.Admin.PrimaryColor,
			FixedHeader:  config.Admin.FixedHeader,
			FixSiderbar:  config.Admin.FixSiderbar,
			IconfontUrl:  config.Admin.IconfontUrl,
			Locale:       config.Admin.Locale,
			SiderWidth:   config.Admin.SiderWidth,
			Copyright:    config.Admin.Copyright,
			Links:        config.Admin.Links,
		},
		StaticPath: "../../website",
	}

	// 实例化对象
	b := builder.New(getConfig)

	// 初始化安装
	install.Handle()

	// 初始化本项目数据库
	appinstall.Handle()

	// 中间件
	b.Use(middleware.Handle)

	// 适配hertz
	hertzadapter.Adapter(b, h)

	// 启动服务
	h.Spin()
}
