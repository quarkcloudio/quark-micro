// Code generated by hertz generator.

package main

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/app/server"
	handler "github.com/quarkcms/quark-hertz/cmd/admin/biz/handler"
	"github.com/quarkcms/quark-hertz/pkg/resource"
	"github.com/quarkcms/quark-hertz/pkg/resource/adapter/hertzadapter"
)

var builder *resource.Resource

func init() {

	// 初始化
	builder = resource.New(&resource.Config{
		Providers: handler.Providers,
	})
}

// customizeRegister registers customize routers.
func customizedRegister(r *server.Hertz) {

	// 后台路由组
	rg := r.Group("/api/admin")

	// 登录
	rg.GET("/login/:resource/index", func(c context.Context, ctx *app.RequestContext) {
		hertzadapter.ResponseAdapter(builder, hertzadapter.COMPONENT_RESPONSE, ctx)
	})
	rg.POST("/login/:resource/handle", func(c context.Context, ctx *app.RequestContext) {
		hertzadapter.ResponseAdapter(builder, hertzadapter.ACTION_RESPONSE, ctx)
	})
	rg.GET("/login/:resource/captchaId", func(c context.Context, ctx *app.RequestContext) {
		hertzadapter.ResponseAdapter(builder, hertzadapter.ACTION_RESPONSE, ctx)
	})
	rg.GET("/login/:resource/captcha/:id", func(c context.Context, ctx *app.RequestContext) {
		hertzadapter.ResponseAdapter(builder, hertzadapter.FILE_RESPONSE, ctx)
	})

	// 资源
	rg.GET("/:resource/index", func(c context.Context, ctx *app.RequestContext) {
		hertzadapter.ResponseAdapter(builder, "component", ctx)
	})
}
